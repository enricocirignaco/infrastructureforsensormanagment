services:
  compiler-engine:
    container_name: compiler-engine
    image: registry.gitlab.ti.bfh.ch/internetofsoils/infrastructureforsensormanagment/compiler-engine:${TAG}
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - compiler-engine-source:/source
      - compiler-engine-output:/output
      - compiler-engine-logs:/logs
      - compiler-engine-cache:/cache
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env-compiler-engine

  compiler-engine-cleaner:
    image: registry.gitlab.ti.bfh.ch/internetofsoils/infrastructureforsensormanagment/compiler-engine-cleaner:${TAG}
    container_name: compiler-engine-cleaner
    volumes:
      - compiler-engine-source:/source
      - compiler-engine-output:/output
      - compiler-engine-logs:/logs
      - ./src/compiler-engine/app/cleaner.py:/app/cleaner.py
    environment:
      - PYTHONUNBUFFERED=1
    env_file:
      - .env-compiler-engine
    restart: unless-stopped

  reverse-proxy:
    image: registry.gitlab.ti.bfh.ch/internetofsoils/infrastructureforsensormanagment/reverse-proxy:${TAG}
    container_name: reverse-proxy
    restart: unless-stopped
    cap_add:  # improve QUIC speeds
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - reverse-proxy-data:/data
      - reverse-proxy-config:/config

  webapp-backend:
    image: registry.gitlab.ti.bfh.ch/internetofsoils/infrastructureforsensormanagment/webapp-backend:${TAG}
    container_name: webapp-backend
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      - TRIPLESTORE_ENDPOINT=http://fuseki:3030/core/
      - PYTHONUNBUFFERED=1
      - TZ=Europe/Zurich
    env_file:
      - .env-backend

  timeseries-parser:
    image: registry.gitlab.ti.bfh.ch/internetofsoils/infrastructureforsensormanagment/timeseries-parser:${TAG}
    container_name: timeseries-parser
    restart: always
    environment:
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
      - MQTT_TOPIC=v3/leaf-link-prod@ttn/devices/#
      - FUSEKI_ENDPOINT=http://fuseki:3030/core/
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_ORG=bfh
      - INFLUX_BUCKET=default
      - PYTHONUNBUFFERED=1
      - TZ=Europe/Zurich
    env_file:
      - .env-parser
    depends_on:
      - mqtt-broker
      - fuseki
      - influxdb

  protobuf-service:
    image: registry.gitlab.ti.bfh.ch/internetofsoils/infrastructureforsensormanagment/protobuf-service:${TAG}
    container_name: protobuf-service
    restart: unless-stopped
    ports:
      - "8002:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=Europe/Zurich

  mqtt-broker:
    image: registry.gitlab.ti.bfh.ch/internetofsoils/infrastructureforsensormanagment/mqtt-broker:${TAG}
    container_name: mqtt-broker
    ports:
      - "1883:1883"
    volumes:
      - mqtt-broker-config:/mosquitto/config
      - mqtt-broker-data:/mosquitto/data
      - mqtt-broker-logs:/mosquitto/log
    env_file:
      - .env-mosquitto

  fuseki:
    image: stain/jena-fuseki:5.1.0
    container_name: fuseki-triplestore
    restart: unless-stopped
    ports:
      - "3030:3030"
    volumes:
      - fuseki-data:/fuseki
    environment:
      - ENABLE_DATA_WRITE=true
      - ENABLE_UPDATE=true
      - ENABLE_SHACL=false # Used for rdf-structure validation
      - TDB=2
      - FUSEKI_DATASET_1=core # Creates empty dataset with given name
    env_file:
      - .env-fuseki

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_ORG=bfh
      - DOCKER_INFLUXDB_INIT_BUCKET=default
    env_file:
      - .env-influxdb

  yasgui:
    image: erikap/yasgui
    container_name: yasgui-sparql-ui
    restart: unless-stopped
    ports:
      - "3031:80"
    depends_on:
      - fuseki
    environment:
      - DEFAULT_SPARQL_ENDPOINT=http://leaflink.ti.bfh.ch:3030/core/sparql
      - ENABLE_ENDPOINT_SELECTOR=false
volumes:
  reverse-proxy-conf:
    name: reverse-proxy-config
  reverse-proxy-data:
    name: reverse-proxy-data
  reverse-proxy-config:
    name: reverse-proxy-config
  compiler-engine-source:
    name: compiler-engine-source
  compiler-engine-output:
    name: compiler-engine-output
  compiler-engine-logs:
    name: compiler-engine-logs
  compiler-engine-cache:
    name: compiler-engine-cache
  mqtt-broker-config:
    name: mqtt-broker-config
  mqtt-broker-data:
    name: mqtt-broker-data
  mqtt-broker-logs:
    name: mqtt-broker-logs
  fuseki-data:
    name: fuseki-data
  influxdb-data:
    name: influxdb-data