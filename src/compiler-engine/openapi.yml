openapi: "3.0.3"
info:
  title: "Compiler Engine"
  version: "1.0"
servers:
  - url: "http://localhost:8000"
tags:
  - name: "Build"
    description: "Endpoints for initiating standard build jobs using ardunio-cli"
  - name: "Generic Build"
    description: "Endpoints for initiating build jobs using a custom compiler"
  - name: "Build Job"
    description: "Endpoints for retrieving build job status and artifacts"
paths:
  /build:
    post:
      tags:
        - "Build"
      summary: "Initiate a standard build job"
      description: "Starts a build job using ardunio-cli."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StandardBuildRequest"
      responses:
        "200":
          description: "Build job started successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildJobResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /generic-build:
    post:
      tags:
        - "Generic Build"
      summary: "Initiate a custom build job"
      description: "Starts a build job using a custom compiler toolchain."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomBuildRequest"
      responses:
        "200":
          description: "Build job started successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildJobResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /job/{job_id}/status:
    get:
      tags:
        - "Build Job"
      summary: "Get build job status"
      description: "Retrieves the status and message for a build job identified by its job ID."
      parameters:
        - name: job_id
          in: path
          description: "Unique identifier for the build job"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Build job status retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildStatusResponse"
        "404":
          description: "Job ID not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /job/{job_id}/artifacts:
    get:
      tags:
        - "Build Job"
      summary: "Get build job artifacts"
      description: "Downloads the build artifacts as a ZIP archive or only the compiled hex file based on query parameters."
      parameters:
        - name: job_id
          in: path
          description: "Unique identifier for the build job"
          required: true
          schema:
            type: string
        - name: get_source_code
          in: query
          description: "Include the source code in the artifacts"
          required: false
          schema:
            type: boolean
            default: false
        - name: get_logs
          in: query
          description: "Include the logs in the artifacts"
          required: false
          schema:
            type: boolean
            default: false
        - name: hex_only
          in: query
          description: "Return only the compiled hex file"
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: "Artifacts file returned successfully"
          content:
            application/zip:
              schema:
                type: string
                format: binary
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          description: "Bad request - invalid parameters or job not ready"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Job or file not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    Board:
      type: object
      properties:
        core:
          type: string
          example: "arduino:avr"
        variant:
          type: string
          example: "uno"
      required:
        - core
        - variant
    ConfigProperty:
      type: object
      properties:
        key:
          type: string
          example: "UUID"
        value:
          type: string
          example: "fa7fd395-526f-4762-94b8-ad67886fcc52"
      required:
        - key
        - value
    StandardBuildRequest:
      type: object
      properties:
        git_repo_url:
          type: string
          example: "https://gitlab.ti.bfh.ch/internetofsoils/dummy-2temp-1hum-snt"
        firmware_tag:
          type: string
          example: "v1.0.0"
        board:
          $ref: "#/components/schemas/Board"
        libraries:
          type: array
          items:
            type: string
          example: ["ArduinoJson@6.17.3"]
        config:
          type: array
          items:
            $ref: "#/components/schemas/ConfigProperty"
      required:
        - git_repo_url
        - firmware_tag
        - board
    CustomBuildRequest:
      type: object
      properties:
        git_repo_url:
          type: string
          example: "https://gitlab.example.com/your-repo.git"
        git_repo_auth_token:
          type: string
          example: "your_gitlab_token"
        firmware_tag:
          type: string
          example: "v1.0.0"
        compiler_registry_url:
          type: string
          example: "your-compiler-registry-url"
        registry_auth_token:
          type: string
          example: "your_registry_token"
        registry_auth_username:
          type: string
          example: "your_registry_username"
        compiler_command:
          type: string
          example: "arduino-cli compile --fqbn arduino:avr:uno ..."
      required:
        - git_repo_url
        - git_repo_auth_token
        - firmware_tag
        - compiler_registry_url
        - registry_auth_token
        - registry_auth_username
        - compiler_command
    BuildJobResponse:
      type: object
      properties:
        job_id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        status:
          type: string
          example: "pending"
        message:
          type: string
          example: "Building process started in background"
        timestamp:
          type: string
          format: date-time
          example: "2021-10-10T10:10:10Z"
      required:
        - job_id
        - status
        - message
        - timestamp
    BuildStatusResponse:
      type: object
      properties:
        status:
          type: string
          example: "running"
        message:
          type: string
          example: "Building process in progress"
      required:
        - status
        - message
    ErrorResponse:
      type: object
      properties:
        detail:
          type: string
          example: "Job ID not found"
      required:
        - detail