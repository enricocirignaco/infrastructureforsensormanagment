stages:
  - build

variables:
  IMAGE_TAG: $CI_COMMIT_TAG
  REGISTRY_IMAGE: "$CI_REGISTRY_IMAGE"
  DOCKER_BUILDKIT: 1  # Enables BuildKit for caching

# This is a template for building Docker images in GitLab CI/CD.
.docker-build-template: &docker-build
  stage: build
  image: docker:20.10.16
  services:
    - name: docker:20.10.16-dind
      command: ["--tls=false"]
  before_script:
    - echo "Logging into GitLab Container Registry..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  only:
    - tags

build-arduino-compiler:
  <<: *docker-build
  variables:
    IMAGE_NAME: "arduino-compiler"
  script:
    - echo "Building Arduino Compiler Image..."
    - docker build -t "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG" -f src/compiler-engine/arduino-compiler/Dockerfile .
    - echo "Pushing image to GitLab Container Registry..."
    - docker push "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"

build-compiler-engine:
  <<: *docker-build
  variables:
    IMAGE_NAME: "compiler-engine"
  script:
    - echo "Building Compiler Engine Image..."
    - docker build -t "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG" -f src/compiler-engine/Dockerfile src/compiler-engine
    - echo "Pushing image to GitLab Container Registry..."
    - docker push "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"
build-compiler-engine-cleaner:
  <<: *docker-build
  variables:
    IMAGE_NAME: "compiler-engine-cleaner"
  script:
    - echo "Building Compiler Engine Cleaner Image..."
    - docker build -t "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG" -f src/volumes-cleaner/Dockerfile src/volumes-cleaner
    - echo "Pushing image to GitLab Container Registry..."
    - docker push "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"
build-frontend:
  <<: *docker-build
  variables:
    IMAGE_NAME: "reverse-proxy"
  script:
    - echo "Building Frontend Image..."
    - docker build --build-arg APP_VERSION="$CI_COMMIT_TAG" -t "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG" -f src/webapp-frontend/Dockerfile .
    - echo "Pushing image to GitLab Container Registry..."
    - docker push "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"
build-backend:
  <<: *docker-build
  variables:
    IMAGE_NAME: "webapp-backend"
  script:
    - echo "Building Backend Image..."
    - docker build -t "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG" -f src/webapp-backend/Dockerfile src/webapp-backend
    - echo "Pushing image to GitLab Container Registry..."
    - docker push "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"
build-timeseries-parser:
  <<: *docker-build
  variables:
    IMAGE_NAME: "timeseries-parser"
  script:
    - echo "Building Timeseries-Parser Image..."
    - docker build -t "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG" -f src/timeseries-parser/Dockerfile src/timeseries-parser
    - echo "Pushing image to GitLab Container Registry..."
    - docker push "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"
build-protobuf-service:
  <<: *docker-build
  variables:
    IMAGE_NAME: "protobuf-service"
  script:
    - echo "Building Protobuf-Service Image..."
    - docker build -t "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG" -f src/protobuf-service/Dockerfile src/protobuf-service
    - echo "Pushing image to GitLab Container Registry..."
    - docker push "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"
build-mqtt-broker:
  <<: *docker-build
  variables:
    IMAGE_NAME: "mqtt-broker"
  script:
    - echo "Building MQTT Broker Image..."
    - docker build -t "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG" -f src/mqtt-broker/Dockerfile src/mqtt-broker
    - echo "Pushing image to GitLab Container Registry..."
    - docker push "$REGISTRY_IMAGE/$IMAGE_NAME:$IMAGE_TAG"